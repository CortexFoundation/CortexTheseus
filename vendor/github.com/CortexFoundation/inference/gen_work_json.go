// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package inference

import (
	"encoding/json"
	"errors"
)

// MarshalJSON marshals as JSON.
func (w Work) MarshalJSON() ([]byte, error) {
	type Work struct {
		Type InferType `json:"type" gencodec:"required"`
	}
	var enc Work
	enc.Type = w.Type
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (w *Work) UnmarshalJSON(input []byte) error {
	type Work struct {
		Type *InferType `json:"type" gencodec:"required"`
	}
	var dec Work
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Type == nil {
		return errors.New("missing required field 'type' for Work")
	}
	w.Type = *dec.Type
	return nil
}
