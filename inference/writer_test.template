package inference

import (
	"testing"
	"os"
)


{{- range . }}
	func TestWrite{{ .TypeU }}(t *testing.T) {

		data := []{{ .TypeL }}{0, 1, 2, 3, 4, 5, 6, 7}

		for shape := 0; shape < 4; shape++ {

			wtr, err := NewFileWriter("data/tmp.npy")
			if err != nil {
				panic(err)
			}

			switch shape {
			case 0:
				wtr.Shape = []int{4, 2}
			case 1:
				wtr.Shape = []int{8, 1}
			case 2:
				wtr.Shape = []int{1, 8}
			case 3:
				wtr.Shape = nil
			}

			err = wtr.Write{{ .TypeU }}(data)
			if err != nil {
				panic(err)
			}

			r, err := os.Open("data/tmp.npy")
			if err != nil {
				panic(err)
			}

			rdr, err := NewReader(r)
			if err != nil {
				panic(err)
			}

			data, err = rdr.Get{{ .TypeU }}()
			if err != nil {
				panic(err)
			}

			if !check{{ .TypeU }}(data) {
				t.Fail()
			}
		}
	}
{{ end }}
