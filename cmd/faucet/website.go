// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x7a\x6d\x73\xe3\x36\x92\xf0\x67\xcf\xaf\xe8\xf0\x19\xaf\xa4\xc7\x22\x29\xdb\x33\xb3\x3e\x89\x54\x6a\x76\x36\x9b\x9d\xab\xbb\x24\x95\x4c\xea\x6e\x2b\x9b\xba\x02\x89\x96\x88\x31\x08\x30\x00\x28\x59\x71\xe9\xbf\x5f\x01\x20\x29\xea\xc5\x1e\xcf\xcb\xdd\xc5\x1f\x64\x12\x68\x74\x37\xfa\x1d\x0d\x26\x5f\xfd\xf5\xfb\x37\xef\xfe\xf1\xc3\x37\x50\x98\x92\xcf\x9f\x25\xf6\x1f\x70\x22\x96\x69\x80\x22\x98\x3f\x3b\x4b\x0a\x24\x74\xfe\xec\xec\x2c\x29\xd1\x10\xc8\x0b\xa2\x34\x9a\x34\xa8\xcd\x22\xbc\x09\x76\x13\x85\x31\x55\x88\xbf\xd5\x6c\x95\x06\xff\x19\xfe\xfc\x3a\x7c\x23\xcb\x8a\x18\x96\x71\x0c\x20\x97\xc2\xa0\x30\x69\xf0\xf6\x9b\x14\xe9\x12\x7b\xeb\x04\x29\x31\x0d\x56\x0c\xd7\x95\x54\xa6\x07\xba\x66\xd4\x14\x29\xc5\x15\xcb\x31\x74\x2f\x63\x60\x82\x19\x46\x78\xa8\x73\xc2\x31\xbd\x0c\xe6\xcf\x2c\x1e\xc3\x0c\xc7\xf9\xfd\x7d\xf4\x1d\x9a\xb5\x54\xb7\xdb\xed\x14\x5e\xd7\xa6\x40\x61\x58\x4e\x0c\x52\xf8\x1b\xa9\x73\x34\x49\xec\x21\xdd\x22\xce\xc4\x2d\x14\x0a\x17\x69\x60\x59\xd7\xd3\x38\xce\xa9\x78\xaf\xa3\x9c\xcb\x9a\x2e\x38\x51\x18\xe5\xb2\x8c\xc9\x7b\x72\x17\x73\x96\xe9\xd8\xac\x99\x31\xa8\xc2\x4c\x4a\xa3\x8d\x22\x55\x7c\x1d\x5d\x47\x7f\x8e\x73\xad\xe3\x6e\x2c\x2a\x99\x88\x72\xad\x03\x50\xc8\xd3\x40\x9b\x0d\x47\x5d\x20\x9a\x00\xe2\xf9\xa7\xd1\x5d\x48\x61\x42\xb2\x46\x2d\x4b\x8c\x5f\x44\x7f\x8e\x26\x8e\x64\x7f\xf8\x71\xaa\x96\xac\xce\x15\xab\x0c\x68\x95\x3f\x99\xee\xfb\xdf\x6a\x54\x9b\xf8\x3a\xba\x8c\x2e\x9b\x17\x47\xe7\xbd\x0e\xe6\x49\xec\x11\xce\x3f\x0b\x77\x28\xa4\xd9\xc4\x57\xd1\x8b\xe8\x32\xae\x48\x7e\x4b\x96\x48\x5b\x4a\x76\x2a\x6a\x07\xbf\x18\xdd\x87\x74\xf8\xfe\x50\x85\x5f\x82\x58\x29\x4b\x14\x26\x7a\xaf\xe3\xab\xe8\xf2\x26\x9a\xb4\x03\xc7\xf8\x1d\x01\xab\x34\x4b\xea\x2c\x5a\xa1\xb2\x96\xcb\xc3\x1c\x85\x41\x05\xf7\x76\xf4\xac\x64\x22\x2c\x90\x2d\x0b\x33\x85\xcb\xc9\xe4\x7c\x76\x6a\x74\x55\xf8\x61\xca\x74\xc5\xc9\x66\x0a\x0b\x8e\x77\x7e\x88\x70\xb6\x14\x21\x33\x58\xea\x29\x78\xcc\x6e\x62\xeb\x68\x56\x4a\x2e\x15\x6a\xdd\x10\xab\xa4\x66\x86\x49\x31\xb5\x16\x45\x0c\x5b\xe1\x29\x58\x5d\x11\x71\xb4\x80\x64\x5a\xf2\xda\xe0\x01\x23\x19\x97\xf9\xad\x1f\x73\xde\xdc\xdf\x44\x2e\xb9\x54\x53\x58\x17\xac\x59\x06\x8e\x10\x54\x0a\x1b\xf4\x50\x11\x4a\x99\x58\x4e\xe1\x55\xd5\xec\x07\x4a\xa2\x96\x4c\x4c\x61\xb2\x5b\x92\xc4\xad\x18\x93\xd8\x07\xae\x67\x67\x49\x26\xe9\xc6\xe9\x90\xb2\x15\xe4\x9c\x68\x9d\x06\x07\x22\x76\x01\x69\x0f\xc0\xc6\x21\xc2\x44\x3b\xb5\x37\xa7\xe4\x3a\x00\x47\x28\x0d\x3c\x13\x61\x26\x8d\x91\xe5\x14\x2e\x2d\x7b\xcd\x92\x03\x7c\x3c\xe4\xcb\xf0\xf2\xaa\x9d\x3c\x4b\x8a\xcb\x16\x89\xc1\x3b\x13\x3a\xfd\x74\x9a\x09\xe6\x09\x6b\xd7\x2e\x08\x2c\x48\x98\x11\x53\x04\x40\x14\x23\x61\xc1\x28\x45\x91\x06\x46\xd5\x68\xed\x88\xcd\xa1\x1f\xfe\x1e\x88\x7e\xc5\x65\xcb\x57\x4c\xd9\xaa\xd9\x56\xef\xf1\x60\x87\x0f\x6f\xe2\x06\x9a\x07\xb9\x58\x68\x34\x61\x6f\x4f\x3d\x60\x26\xaa\xda\x84\x4b\x25\xeb\xaa\x9b\x3f\x4b\xdc\x28\x30\x9a\x06\xb5\xe2\x41\x13\xfe\xdd\xa3\xd9\x54\x8d\x28\x82\x6e\xe3\x52\x95\xa1\xd5\x84\x92\x3c\x80\x8a\x93\x1c\x0b\xc9\x29\xaa\x34\xf8\x49\xe6\x8c\x70\x10\x7e\xcf\xf0\xf3\x8f\xff\x06\x8d\xca\x98\x58\xc2\x46\xd6\x0a\xbe\x31\x05\x2a\xac\x4b\x20\x94\x5a\x73\x8d\xa2\xa8\xc7\x88\xb3\xdd\x63\x56\xc3\xcc\x88\x1d\xd4\x59\x92\xd5\xc6\xc8\x0e\x30\x33\x02\x32\x23\x42\x8a\x0b\x52\x73\x03\x54\xc9\x8a\xca\xb5\x08\x8d\x5c\x2e\x6d\xa6\xf3\x9b\xf0\x8b\x02\xa0\xc4\x90\x66\x2a\x0d\x5a\xd8\x56\x87\x44\x57\xb2\xaa\xab\x46\x8b\x7e\x10\xef\x2a\x22\x28\x52\xab\x73\xae\x31\x98\x7f\xcb\x56\x08\x25\xfa\xbd\x9c\x1d\x9a\x44\x4e\x14\x9a\xb0\x8f\xf4\xc8\x30\x92\xd8\x33\xe3\xb7\x04\xcd\x5f\x52\xf3\x16\x53\xb7\x85\x12\x45\x0d\x7b\x6f\xa1\xb2\x71\x25\x98\xdf\xdf\x2b\x22\x96\x08\xcf\x19\xbd\x1b\xc3\x73\x52\xca\x5a\x18\x98\xa6\x10\xbd\x76\x8f\x7a\xbb\xdd\xc3\x0e\x90\x70\x36\x4f\xc8\x63\xe6\x0d\x52\xe4\x9c\xe5\xb7\x69\x60\x18\xaa\xf4\xfe\xde\x22\xdf\x6e\x67\x70\x7f\xcf\x16\xf0\x3c\xfa\x11\x73\x52\x99\xbc\x20\xdb\xed\x52\xb5\xcf\x11\xde\x61\x5e\x1b\x1c\x8e\xee\xef\x91\x6b\xdc\x6e\x75\x9d\x95\xcc\x0c\xdb\xe5\x76\x5c\xd0\xed\xd6\xf2\xdc\xf0\xb9\xdd\x42\x6c\x91\x0a\x8a\x77\xf0\x3c\xfa\x01\x15\x93\x54\x83\x87\x4f\x62\x32\x4f\x62\xce\xe6\xcd\xba\x7d\x21\xc5\x35\xdf\xd9\x4b\x6c\x0d\xa6\xb3\x73\xe7\x36\x8e\xd5\x3e\xa7\x27\xbc\x60\x19\x76\xdc\x37\xf6\xa0\x99\xc1\x5b\xdc\xa4\xc1\xfd\x7d\x7f\x6d\x33\x9b\x13\xce\x33\x62\xe5\xe2\xb7\xd6\x2d\xfa\x1d\xad\x9d\xae\x98\x76\x25\xd5\xbc\xe5\x60\xc7\xf6\x13\xdd\xfa\x20\x70\x19\x59\x4d\xe1\xfa\xaa\x17\xb5\x4e\x79\xfc\xab\x03\x8f\xbf\x3e\x09\x5c\x11\x81\x1c\xdc\x6f\xa8\x4b\xc2\xdb\xe7\xc6\x5b\x7a\xce\x77\xb8\x28\xb4\x31\xba\x63\xad\x8b\xf5\x93\x19\xc8\x15\xaa\x05\x97\xeb\x29\x90\xda\xc8\x19\x94\xe4\xae\xcb\x77\xd7\x93\x49\x9f\x6f\x5b\x0a\x92\x8c\xa3\x8b\x2e\x0a\x7f\xab\x51\x1b\xdd\xc5\x12\x3f\xe5\x7e\x6d\x48\xa1\x28\x34\xd2\x03\x69\x58\x8a\x56\xb4\x0e\xaa\xa7\xfa\x4e\x98\x27\x79\x5f\x48\xd9\xa5\x90\x3e\x1b\x0d\xea\x5e\xb6\x0b\xe6\x89\x51\x3b\xb8\xb3\xc4\xd0\x8f\x4a\x01\xca\x96\x78\x0f\x65\x00\x1f\xd1\xec\xde\x2b\x44\xe5\xeb\x0b\x6b\xb2\xe0\x5e\x93\xd8\xd0\xcf\xa0\x6c\x8d\x30\x23\x1a\x9f\x42\xde\x65\xfa\x1d\x79\xf7\xfa\xb9\xf4\x0b\x24\xca\x64\x48\xcc\x53\x18\x58\xd4\x82\xf6\xf6\xef\x62\xe7\xe7\x32\x50\x0b\xb6\x42\xa5\x99\xd9\x3c\x95\x03\xa4\x3b\x16\xfc\xfb\x3e\x0b\x49\x6c\xd4\xe3\xb6\xd6\x7f\xf9\x42\xce\xfd\xa1\x92\xe4\x7a\xfe\x77\xb9\x06\x2a\x51\x83\x29\x98\x06\x9b\x5c\xbf\x4e\xe2\xe2\xba\x03\xa9\xe6\xef\xec\x84\x13\x2a\x2c\x5c\x69\x01\x4c\x83\xaa\x85\xcb\xbc\x52\x80\x29\x70\xbf\x1c\x69\x92\x74\x04\xef\xa4\x2d\xe9\x56\x28\x0c\x94\x84\xb3\x9c\xc9\x5a\x03\xc9\x8d\x54\x1a\x16\x4a\x96\x80\x77\x05\xa9\xb5\xb1\x88\x6c\xf8\x20\x2b\xc2\xb8\xf3\x25\xa7\x52\x90\x0a\x48\x9e\xd7\x65\x6d\x4b\x52\xb1\x04\x14\xb2\x5e\x16\x0d\x2f\x46\x82\x4f\x4c\x5c\x8a\x65\xc7\x8f\xae\x48\x09\xc4\x18\x92\xdf\xea\x31\xb4\x51\x01\x88\x42\x30\x0c\xa9\x5d\x95\xa3\xb2\x75\x03\xe4\xb2\x2c\xa5\x80\x6b\x45\xa1\x22\xca\x6c\x2c\x2d\x97\xde\x22\x78\x2d\x36\x52\x20\x14\x64\xe5\x58\x83\x6f\x99\xf9\x7b\x9d\x8d\xe1\x9d\x3f\x4f\x8c\xe1\x5b\x29\x97\x1c\x2f\x2c\x87\x7f\x23\x39\x66\x52\xde\xb6\xcb\xa1\x24\x9b\x96\x70\xb3\x8f\x35\x33\x05\xf3\x82\xaa\x50\x95\x16\x07\x05\xce\x4a\x66\x74\x94\xc4\xd5\x2e\xb6\xee\xb2\x34\x0f\x0b\xa9\xd8\xef\xb6\xc4\xe1\x9d\xbe\x00\x12\x6a\x0e\xe2\x4c\x1b\x26\x9d\x01\x70\x5c\x98\x29\xbc\xf0\x61\xf2\xd0\xa4\x97\xcc\x14\x75\x16\x12\x7e\xd2\xa9\x5a\xb4\xee\x9c\x69\xd3\xcf\x14\xae\x7d\x71\xeb\xcb\x0a\x6a\x7a\x21\x91\x1e\x18\x9e\xa7\x7b\x73\x53\xdd\x75\xac\x74\x15\xf2\xa4\x43\x62\xed\x61\x5f\x30\x2b\xb6\x93\x6d\xae\x90\x18\x04\x02\x09\x39\x38\x30\x2f\x99\x36\x91\xe7\xde\x1d\xb9\x02\x30\x44\x2d\xd1\xa4\xc1\x7f\x91\x4c\xd6\x66\x9a\x71\x22\x6e\x83\xb9\x85\xb3\x19\xde\xc9\xfb\x74\x4d\x08\x58\x66\x48\x29\x52\x60\xc2\x48\xa7\x91\xa6\x03\x01\x43\xfb\xb2\x60\x1c\x5d\x91\xea\x7c\x42\x0c\xac\x36\xad\xc6\x47\x51\x92\xa9\x78\xfe\x46\x56\x9b\xb0\x22\xda\xa0\x5b\x6a\x09\x6a\x57\x8b\x76\xd8\x48\x26\x57\x08\xbe\xea\xcd\xe4\x1d\x10\x41\x61\xc1\x14\x02\x59\x93\xcd\x57\x49\x4c\xdd\x19\xa5\x95\xe3\xa7\x2b\xb3\x39\xd9\xfe\xa1\x34\xd9\x79\x47\x49\x6e\x4f\x2a\xb2\x61\xda\x29\x91\x39\xa9\xc7\x66\x8d\x68\xbe\xb6\x21\x39\xfd\xd1\x23\x64\x62\x79\x7e\x35\xf1\x91\xc6\x3e\x58\xf4\xe7\x57\x13\x2b\xe1\xf3\xab\xc9\xe4\x6e\xf2\xc4\xbf\xf3\xab\x89\x14\xe7\x57\x13\x53\xe0\xf9\xd5\xe4\xfc\xea\xba\x1f\xa3\xfc\x48\x6b\x1d\x16\x0a\xb5\xa5\xd6\x86\xae\x87\x4c\xcc\xb1\xfb\x21\x1b\x73\x06\x72\x6c\x61\x1a\x86\xba\x56\x4a\xd6\xc2\x56\x3b\x60\xf7\xfc\x24\x2b\x3b\x12\xa3\xae\xab\x4a\x2a\x13\xf5\xc5\x49\xec\xf9\x96\xa3\x8e\x6f\x26\x2f\x6f\x5e\x3d\xca\xbe\xb3\x58\xb7\x87\xff\x75\xab\x5d\xba\xb0\x19\x56\xbc\xd6\xb6\xb4\x64\xf6\x4c\xf7\x87\x32\x61\x1f\xd7\xe1\x07\x5e\xeb\x31\x54\x75\xc6\x99\x2e\x80\x80\xc0\x35\x24\xda\x28\x29\x96\x73\x37\x9a\x27\x71\xf3\x0a\x95\xd4\xe6\x13\x23\xce\x27\x99\x83\xa5\xf7\x7f\x14\x74\x16\x4d\xaa\xfb\x43\xa9\xac\xcd\xbf\x7f\x54\x7d\x1d\xb9\xef\x7a\xbd\x8e\x5a\x49\x3a\xdf\x2d\x90\x57\xb1\xad\x46\x6a\xc1\xcc\x26\xf6\x51\x50\x8a\xf8\x6b\x46\xd3\xab\x9b\xab\x57\xaf\xae\x5e\xfc\xcb\xcd\xcb\x97\x57\x37\x2f\x5e\x3e\xe4\xd8\x9d\x51\x7c\xba\x5f\xfb\xd3\xed\x77\xf2\x75\x6d\x8a\xee\x68\xeb\xed\xa5\x3d\x52\xd9\xc2\x99\x12\xb1\xb4\x79\xe7\x53\x6d\xa8\x16\xf6\x7c\xf0\x05\xaa\x10\x67\x46\x8f\x70\xf6\x99\xa6\xd5\x9a\x8f\xb5\x14\x59\x1b\xbb\xc3\xb6\xc7\xc6\xa4\xe8\xcc\x69\x0c\x9a\x95\x15\xdf\x40\xbe\xd3\xfa\x69\xbb\x7a\x50\x29\x1f\x34\xab\x7d\xb5\x79\x23\x73\x45\x79\x29\x29\xda\x62\x5c\xd7\x3a\xc7\xca\x5d\xbe\xd8\x02\xf7\x2f\x9b\xdf\x89\x30\x4c\x60\x5b\x08\x47\xf0\xbd\xe0\x1b\xa8\x35\xc2\x42\x2a\xa0\x98\xd5\xcb\xa5\xab\xde\x15\x54\x8a\xad\x6c\xdd\xd5\x64\x3e\xdd\x58\x45\x67\x14\xbd\x86\x83\x3d\x89\xf0\xde\xc1\xe0\x1f\xb2\x86\x9c\x08\x30\x8a\xe4\xb7\xde\x53\x6a\xa5\xac\xa7\x54\xe8\x77\xd3\xd5\xdf\x19\x72\xb9\x76\x20\x7e\xdf\x0b\x86\xdc\x15\xe3\x1a\x11\x0a\xb9\x86\xb2\xce\x9d\x43\xda\x9a\xdb\x6d\x62\x4d\x98\x81\x5a\x18\xc6\xbd\x3c\x4d\xad\x5c\xc9\x8e\x7b\x25\xf3\x51\x4b\x26\xc1\x72\xfe\xce\x16\x72\x47\x27\x95\xae\x99\x02\x0a\xdf\x78\x70\xa8\x94\x34\x98\x5b\x85\x02\x59\x12\x26\xb4\xd5\x88\x2b\xca\xb1\x7c\x42\xb3\xa5\x7b\x6a\x1e\x76\x17\x07\x6e\x3a\x8e\xe1\x5b\x2e\x33\xc2\x61\x65\x2d\x3d\xe3\xf6\x94\x25\xa1\x90\x76\xeb\x3d\x69\x69\x43\x4c\xad\x41\x2e\xdc\xa8\xe7\xdc\xae\x5f\x11\x65\x35\x88\x65\x65\x20\x6d\xda\xde\x76\x4c\xa3\x5a\x35\xcd\x7c\xfb\x6a\x18\xaa\xbd\xf9\x4e\xea\x29\xfc\xf2\xeb\xec\x59\xc3\xca\x5f\x71\xe1\x4c\xc2\xda\xb7\xdf\xb2\x29\x88\x69\xca\x6e\x0d\x39\x97\xba\x56\x9e\x43\xaa\x64\x05\x96\xcb\x16\x53\x8b\xd9\x4e\x54\x8e\x5a\x8b\x64\x58\x10\x5d\x8c\x9a\xae\xbd\x42\xa7\xa5\x6e\xae\x1d\x3f\xb3\x56\x37\xb4\x08\x58\x3a\x99\x01\x4b\x5a\xbc\x11\x47\xb1\x34\xc5\x0c\xd8\xc5\x45\x07\x7c\xc6\x16\x30\x6c\x21\x7e\x61\xbf\x46\xe6\x2e\xb2\x54\x20\x4d\xa1\x4f\xcd\x11\x6c\xf0\xe8\x8a\xb3\x1c\x87\x6c\x0c\x97\xa3\x59\x3b\x9b\x29\x24\xb7\xed\x5b\xa3\x47\xff\xcf\xfd\x6e\x67\xfb\x92\x71\xc2\xdf\x93\x8d\x6f\xc9\x69\x20\xae\xd2\x87\x5a\x71\x68\x7c\xd8\xab\xa0\x53\x88\x83\xeb\x4b\xe5\xc8\x2e\x9b\x87\xc6\xa6\xda\x2d\x78\x34\x91\x46\x41\x87\xff\xfa\xd3\xf7\xdf\x45\xda\x28\x26\x96\x6c\xb1\x19\xde\xd7\x8a\x4f\xe1\xf9\x30\xf8\x7f\xb5\xe2\xc1\xe8\x97\xc9\xaf\xd1\x8a\xf0\x1a\xc7\x4e\xdf\x53\xf7\x7b\x44\x65\x0c\xcd\xe3\x14\xf6\x09\x6e\x47\xa3\xd9\xe9\xf6\x65\xaf\xdb\xaa\x50\xa3\x19\x5a\xc0\xce\xf0\x0f\x65\x44\xa0\x44\x53\x48\xe7\xba\x0a\x73\x29\x04\xe6\x06\xea\x4a\x8a\x46\x24\xc0\xa5\xd6\x3b\x43\x6c\x21\xd2\x63\xa3\x68\xe0\x53\x97\xac\xff\x03\xb3\x9f\x64\x7e\x8b\x66\x38\x1c\xae\x99\xa0\x72\x1d\x71\xe9\x43\x6d\x64\x9d\x54\xe6\x92\x43\x9a\xa6\xd0\x64\xd1\x60\x04\x5f\x43\xb0\xd6\x36\x9f\x06\x30\xb5\x8f\xf6\x69\x04\x17\x70\xb8\xbc\xb0\xf9\xfe\x02\x82\x98\x54\x2c\x18\x79\x77\x68\x05\x2f\x45\x89\x5a\x93\x25\xf6\x19\x74\x0d\x8b\xce\xc8\xec\x3e\x4a\xbd\x84\x14\x9c\x82\x2a\xa2\x34\x7a\x90\x88\x12\x43\x5a\x6b\xb3\x36\xeb\xc0\xd2\x14\x44\xcd\xf9\xce\x48\xbd\x53\xcc\x5a\xf3\xdb\x03\x8f\x7c\xae\xf9\x2a\x4d\xa1\x16\xd4\x89\x98\xee\x56\x5a\xe5\xfb\xde\xd6\x28\xb2\x79\x61\xb7\x62\x34\xeb\x5b\xf3\x1e\x36\xa4\x1f\x42\x87\xf4\x10\x1f\xd2\x07\x10\xba\x56\xe2\x63\xf8\x7c\xeb\xb1\x87\xce\x0d\x3c\x80\x4d\xd4\x65\x86\xea\x31\x74\xbe\x95\xd8\xa0\x73\xa2\x7e\x2b\x4c\x6f\xed\x18\x2e\x5f\x8d\x1e\xc0\x8e\x4a\xc9\x07\x91\x0b\x69\x36\xc3\x7b\x4e\x36\xb6\x66\x82\x81\x91\xd5\x1b\xd7\xf9\x1b\x8c\x5d\xc6\x9d\x42\x87\x61\xec\xee\x74\xa6\x30\x70\x6f\x76\x9e\x95\xe8\x56\xbd\x9c\x4c\x26\x63\x68\x2f\x43\xff\x42\xac\x13\xaa\x1a\xb7\x0f\xf0\xa3\xeb\x3c\xb7\x79\xff\x73\x38\x6a\x70\x74\x3c\x35\xef\x9f\xc1\x55\x97\x1b\xf6\xd8\x82\x3f\xfd\x09\x8e\x66\xf7\xcd\x38\x8e\xe1\xdf\x89\xba\x75\x7d\xba\x4a\xe1\xca\xf5\xf2\x3a\xf8\x92\x69\xed\x5a\x65\x1a\xa8\x14\xd8\xac\xf9\xb8\xb0\x7f\xc4\x63\x03\x06\x73\x98\x1c\x32\x68\xc3\x61\x2f\x2d\x9c\xc8\x16\x3d\xbc\xfb\x89\xe0\x6c\xdb\xa7\xb7\xb7\x92\x95\x08\x5f\xa5\x10\x04\xfd\xc5\x47\x10\x16\xa0\x43\x76\xa6\xd1\xbc\xf3\xba\x18\x36\xd9\xf1\x54\xee\x1a\x8d\xe1\x7a\x32\x99\x8c\x8e\x98\xd8\xee\xc4\xfb\xba\xb2\x65\x13\x10\xb1\x71\x21\xb1\x93\xad\x2b\x1c\x6d\x09\x64\x43\x1a\x87\x5c\x72\xee\x6b\x96\x66\xa9\x15\x70\xd3\xcb\x4c\x21\xbc\x9c\x9d\xc8\xa2\x3d\x49\xf6\xb6\x76\xa8\x9e\x13\xb2\x3f\x54\xd1\xbe\xcc\x0e\x80\xc3\xcb\x3d\xa5\xec\xe9\xeb\xb4\x62\xce\x3a\xbe\xd9\x4e\xa2\x07\xea\xda\xe9\xeb\x50\x66\x3d\xfe\x3d\x9e\x8b\xcb\x27\x6e\xa3\x9b\xae\x6a\x5d\x0c\x0f\x18\x1d\xcd\x8e\x75\xf3\xd6\xa0\xb2\x55\xb2\xb4\x29\xcb\xea\xc2\x1e\x05\x14\x1e\xa9\xc4\x95\xea\x0a\x43\x85\x82\xa2\x6a\x4b\x0a\x5f\xd9\xdb\x02\x70\x4f\x65\xfe\x54\xd9\x37\xa7\x8f\x74\x18\x57\x92\x49\x81\x00\x00\x07\x4e\xe0\x0c\x75\xcf\x52\x2d\x30\x72\x52\x69\xa4\x90\x82\xff\x36\x65\x38\x8a\x6a\xc1\xee\x86\xa3\xb0\x79\x3f\xc4\xd1\xce\xcf\xba\x63\x62\xcb\xf6\x45\x0a\x41\x62\x14\x30\x9a\x0e\x02\xb8\x38\xe5\x82\x36\xeb\x0e\xe6\x3b\x0e\xfa\x4b\x01\x12\x43\xe7\xee\x7a\xc2\x9f\xd7\xfe\x19\x64\x24\xbf\x5d\xba\x83\xd0\xd4\x96\x5a\xc3\x23\xb4\x64\x45\x0c\x51\x0e\xeb\x68\x06\x3b\xf0\xe6\xa0\x98\x5b\xe5\xcc\xc0\x9f\x48\xdd\x2d\x08\x74\x37\x87\xee\x2d\x93\x8a\xa2\x0a\x15\xa1\xac\xd6\x53\x78\x51\xdd\xcd\xfe\xd9\xde\xac\xba\xbb\x9a\x47\x59\xad\x14\xce\x8f\x38\x6a\x5a\xfe\x17\x10\x24\xb1\x05\xf8\x10\x9a\x6e\xb3\xfd\x6f\x62\xe0\xc4\x8d\x14\x74\x5f\xac\x34\xe3\x25\xa3\x94\xa3\x65\x78\x87\xde\x3a\xa3\xd5\x7f\xdf\xa5\xf6\x49\x42\x73\x15\xb5\x5b\xb3\x05\xe4\x1a\x1f\x59\xd0\xdd\x6a\x0d\xac\x01\x84\x76\xcb\xcc\xc9\xbc\x39\x6c\xbb\x61\x35\x70\xb2\x68\xbe\x70\xa2\xb5\x72\xb5\xd6\x30\x6c\x0c\x6c\x0c\x03\x6d\x6b\x3f\xaa\x07\xa3\xa8\xa8\x4b\x22\xd8\xef\x38\xb4\x79\x69\xe4\x65\xe5\xae\xc9\x82\xe3\x90\x7c\xc4\xcc\xee\xfe\x6a\xd0\xe6\xb8\x41\x23\xc4\x41\xab\xdd\x17\xbb\xb3\xfd\x14\x26\xb3\xc1\x47\x4a\xe8\x34\x95\x30\x23\x0a\xfa\x2f\x61\x9b\x7c\x41\x49\x4b\xbd\x9d\xcb\x88\x1a\xf8\x4e\x86\xab\xcf\x85\x5c\xa7\x83\xeb\x49\xc7\xa4\x57\xb4\xd3\xf3\xa0\xb1\xb5\x23\x65\x58\x2e\x5b\xd7\x9c\xc3\xf5\xe4\x4b\x70\xeb\xbb\x21\x07\x3b\x30\x8a\x55\x48\x81\xe4\x86\xad\xf0\x7f\x60\x23\x5f\x40\xc8\x1f\xcd\xa2\xb5\xc3\x56\x78\xce\x4c\xf7\xf8\xb5\xb3\x9d\x6c\xff\xbf\xf5\x37\x88\x9d\x84\x2f\x20\x38\xb9\x91\x07\x2d\xf1\x00\xf0\xc0\xb5\x1f\xf6\x7b\x77\xef\x1b\x1c\xe6\x14\x5b\xed\x76\xdf\x2c\x8c\xa2\xc2\x94\x7c\x18\x24\xc6\x7d\xbb\x66\x79\xee\x30\x38\x04\x7e\x78\xbf\xa4\xdb\xee\x1f\x64\xec\xf9\x1d\x0f\xce\x59\xd0\x2b\x4e\xba\xb3\x58\x5b\x89\xc0\x76\xf7\x89\x5f\x1c\xc3\x4f\x86\x28\x03\x04\x7e\x7e\x0b\x75\x45\x89\xf1\x37\xac\x36\x3f\xfa\xae\x73\xfb\x0d\x60\x46\x94\x86\x85\x54\x6b\xa2\x68\xd3\x9f\x31\x05\x6e\xdc\x0d\x6b\x5b\xfa\x69\x34\x6f\x6d\x14\x5b\x11\x3e\x3c\x3a\xf7\x3d\x1f\x0e\xa2\xbe\xca\x07\xa3\x08\x49\x5e\x1c\x03\xba\x8c\xd5\xd1\x4d\xe1\x3b\x77\x04\x18\x3e\x1f\x9a\x82\xe9\x51\x44\x8c\x51\xc3\xc1\x9e\x31\x0c\x46\x56\xaf\x97\xbd\x23\x59\xb7\x3c\xd9\x73\xab\xc7\x70\xec\x8a\xe9\xae\x10\x68\xc1\x73\xad\x87\xde\xae\x06\xe3\x1e\xee\x7d\xb3\x1a\x9c\x0f\x3a\x45\xed\xdc\x7b\xb7\x8f\xf4\x24\x27\x7b\xa8\x07\xd6\xcb\x06\x47\xe4\x09\xa5\x6f\xac\xff\x0c\x83\x13\x9e\x7e\x68\x1d\xa3\x4e\xd8\x3e\x5e\x3f\x2a\x65\xff\xb5\xd4\x03\x22\x66\x74\x30\x8a\x74\x9d\xf9\xde\xc4\xf0\x65\x77\x00\x6b\xc1\x9c\xf1\x1e\xa6\x82\xa3\x82\xc2\x92\xd8\x2f\x2a\xc2\x83\x22\xe4\x91\xac\xd1\x90\xf4\xbb\xda\x8e\xad\xc0\x27\xa3\xae\xb5\xf5\x8d\xb6\xc5\x95\x6f\xfd\xaf\x31\xd3\xae\x93\x00\x8d\xbd\xbb\x6e\x8e\xef\xda\xbc\xfe\xe1\x6d\xaf\x73\xd3\x79\xc4\xd0\x61\xef\x3e\xcf\x3d\xd5\x27\x39\xf9\x3d\xf0\x7a\xbd\x8e\xfc\x8d\x96\x6b\xe3\x77\x8d\x94\x98\x54\x2c\x7a\xaf\x03\x20\x7a\x23\x72\xa0\xb8\x40\x35\xef\xa1\x6f\xba\x2b\x49\xec\xbf\x54\x4d\x62\xff\x31\xfe\x7f\x07\x00\x00\xff\xff\x70\x2d\x96\x9f\x9d\x2f\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
